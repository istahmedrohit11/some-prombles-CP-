#include <stdio.h>

#define SIZE 6

int main() {
    int A[SIZE][SIZE];
    int max_sum ; // Minimum possible value for an hourglass sum (-9 * 7 = -63)
    int sum;
    int max_i = 0, max_j = 0; // To track the position of the max hourglass

    // Taking user input for the 6x6 array
    printf("Enter the elements of the 6x6 matrix (row by row):\n");
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            scanf("%d", &A[i][j]);
        }
    }

    // Loop through and calculate the hourglass sums
    printf("\nThe 16 hourglass sums are:\n");
    for (int i = 0; i <= 3; i++) {
        for (int j = 0; j <= 3; j++) {
            sum = A[i][j] + A[i][j+1] + A[i][j+2]
                        + A[i+1][j+1]
                  + A[i+2][j] + A[i+2][j+1] + A[i+2][j+2];

            // Print the hourglass sum with tab formatting
            printf("%d\t", sum);

            // Update max sum and its position if the current sum is larger
            if (sum > max_sum) {
                max_sum = sum;
                max_i = i;
                max_j = j;
            }
        }
        printf("\n");
    }

    // Print the highest hourglass sum and its position
    printf("\nThe highest hourglass sum is %d from the hourglass beginning at row %d, column %d:\n\n",
            max_sum, max_i + 1, max_j + 1);

    // Print the highest hourglass in the required format
    printf("%d\t%d\t%d\n\t%d\n%d\t%d\t%d\n",
           A[max_i][max_j], A[max_i][max_j+1], A[max_i][max_j+2],
           A[max_i+1][max_j+1],
           A[max_i+2][max_j], A[max_i+2][max_j+1], A[max_i+2][max_j+2]);

    return 0;
}

